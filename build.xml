<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="Excel Loader" default="compile" basedir=".">
  <!--
       Properties to setr:
       - projectName
       - projectVersion
       - dir
       -->
  <property file="build.properties"/>
  <property name="src.dir" value="src"/>
  <property name="class.dir" value="./classes"/>
  <property name="lib.dir" value="./lib"/>
  <property name="dist.dir" value="./dist" />
  <property name="config.dir" value="properties"/>
  <property name="docs.dir" value="./javadoc" />
  <property name="images.dir" value="./images" />
  <property name="jnlp.dir" value="./jnlp" />


  <path id="proj.class.path">
    <pathelement location="${class.dir}"/>
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
      <include name="**/*.jar"/>
    </fileset>
  </path>
  
  <!--
  <taskdef name="jalopy"
    classname="de.hunsicker.jalopy.plugin.ant.AntPlugin">
    <classpath>
      <fileset dir="${lib.dir}/jalopy">
        <include name="*.jar" />
      </fileset>
    </classpath>
  </taskdef>
-->

  <target name="sign" if="keystore">
    <signjar alias="${alias}" storepass="${storepass}" keystore="${keystore}">
      <fileset dir="${dist.dir}/lib" includes="*.jar"/>
    </signjar>
  </target>

  <target name="format" depends="compile">
   <jalopy fileformat="auto"
            history="file"
            loglevel="WARN"
            threads="2"
      classpathref="proj.class.path">
      <fileset dir="${src.dir}">
        <include name="**/*.java" />
      </fileset>
    </jalopy>
  </target>

  <target name="clean">
    <delete dir="${class.dir}" failonerror="true" />
  </target>

  <available file="${lib.dir}/cadsr-api.jar" property="available.cadsr"/>
  <available file="build.properties" property="available.build.props"/>
  <available file="input.properties" property="available.input.props"/>

  <target name="fail1" unless="available.cadsr">
    <fail message="missing cadsr-api jar, please build cadsr service layer first"/>
  </target>

  <target name="fail2" unless="available.build.props">
    <fail message="missing build.properties, please create one first first"/>
  </target>

  <target name="fail3" unless="available.input.props">
    <fail message="missing input.properties, please create one first first (username and password)"/>
  </target>

  <target name="compile" depends="fail1">
    <mkdir dir="${class.dir}"/>
    <javac
      destdir="${class.dir}"
      debug="on"
      srcdir="${src.dir}"
      deprecation="false"
      fork="yes"
      >
      <!--
           <compilerarg value="-Xlint"/>
      -->
      <classpath refid="proj.class.path"/>
    </javac>
  </target>

  <target name="prepare"
    depends="compile">
    <copy todir="${class.dir}">
      <fileset dir="${config.dir}">
        <include name="*.properties"/>
        <include name="jaas.config"/>
        <include name="beans.xml"/>
        <include name="datatype-mapping.xml"/>
        <include name="about.html"/>
      </fileset>
      <fileset dir="${images.dir}">
        <include name="*.png"/>
        <include name="*.jpg"/>
        <include name="*.gif"/>
      </fileset>
    </copy>
  </target>

  <target name="dist" depends="prepare">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/lib"/>
    <jar destfile="${dist.dir}/lib/uml-loader.jar"
      manifest="MANIFEST.MF">
      <fileset dir="${class.dir}">
      </fileset>
    </jar>
    <copy file="${jnlp.dir}/siw-${target.env}.jnlp"
      tofile="${dist.dir}/siw.jnlp"
      >
    </copy>
    <copy file="${images.dir}/SIW-logo.jpg"
      tofile="${dist.dir}/SIW-logo.jpg"
      >
    </copy>
    <copy todir="${dist.dir}/lib">
      <fileset dir="${lib.dir}/cacore">
        <include name="codegen.jar"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/lib">
      <fileset dir="${lib.dir}">
        <include name="uml-loader.jar"/>
        <include name="aopalliance.jar"/>
        <include name="cadsr-api.jar"/>
        <include name="cglib-full-2.0.1.jar"/>
        <include name="commons-collections-2.1.jar"/>
        <include name="commons-logging.jar"/>
        <include name="datafile.jar"/>
        <include name="dom4j-1.4.jar"/>
        <include name="ehcache-0.7.jar"/>
        <include name="freemarker.jar"/>
        <include name="hibernate2.jar"/>
        <include name="jakarta-oro-2.0.8.jar"/>
        <include name="jaxen-jdom.jar"/>
        <include name="jaxen-core.jar"/>
        <include name="jdom.jar"/>
        <include name="jmi.jar"/>
        <include name="jmiutils.jar"/>
        <include name="jta.jar"/>
        <include name="log4j-1.2.8.jar"/>
        <include name="mdrapi.jar"/>
        <include name="mof.jar"/>
        <include name="nbmdr.jar"/>
        <include name="odmg-3.0.jar"/>
        <include name="ojdbc14.jar"/>
        <include name="openide-util.jar"/>
        <include name="spring-core.jar"/>
        <include name="spring.jar"/>
        <include name="spring-orm.jar"/>
        <include name="uml-1.3.jar"/>
      </fileset>
    </copy>
    
    <antcall target="sign"/>

  </target>

  <target name="doc">
    <mkdir dir="${docs.dir}"/>
    <mkdir dir="${docs.dir}/api"/>
    <javadoc
      destdir="${docs.dir}/api"
      author="true"
      version="true"
      use="true"
      windowtitle="UML Loader">

      <packageset dir="src" defaultexcludes="no">
        <include name="gov/nih/nci/ncicb/cadsr/**/*" />
        <include name="gov/nih/nci/ncicb/cadsr/**/*" />
      </packageset>

      <doctitle><![CDATA[<h1>UML Loader</h1>]]></doctitle>
      <bottom><![CDATA[<i>~~--~~</i>]]></bottom>
      <tag name="todo" scope="all" description="To do:" />
      <link href="http://java.sun.com/products/jdk/1.4/docs/api/" />
      <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
    </javadoc>
  </target>

  <target name="run" depends="prepare">
    <java classname="gov.nih.nci.ncicb.cadsr.loader.UMLLoader" classpathref="proj.class.path" 
      fork="yes" 
      maxmemory="512m"
      input="input.properties"
      >
      <jvmarg value="-Djava.security.auth.login.config=classes/jaas.config"/>
      <arg value="${dir}"/>
      <arg value="${projectName}"/>
      <arg value="${projectVersion}"/>
    </java>
  </target>

  <target name="gui" depends="prepare">
    <java classname="gov.nih.nci.ncicb.cadsr.loader.UMLLoaderGUI" classpathref="proj.class.path" 
      fork="yes"
      maxmemory="512m"
      >
      <!--
      <jvmarg value="-Djava.security.auth.login.config=classes/jaas.config"/>
      -->
      <arg value="${dir}"/>
      <arg value="${projectName}"/>
      <arg value="${projectVersion}"/>
    </java>
  </target>

  <target name="test-ui" depends="prepare">
    <java classname="gov.nih.nci.ncicb.cadsr.loader.ui.${testClass}" classpathref="proj.class.path" 
      fork="yes"
      jvm="${java}"
      maxmemory="512m"
      >
    </java>    
  </target>

</project>